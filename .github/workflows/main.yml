name: widget-server pipe ECR

on: 
  push:
    branches:
      - 'main'

jobs: 
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate tag
        id: generate-tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT
      
      - name: Build and push the image to AWS ECR
        id: build-push-image
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} 
          ECR_REPOSITORY: ${{ vars.CONTAINER_REPOSITORY }}
          IMAGE_TAG: ${{ steps.generate-tag.outputs.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      # - name: Deploy to App Runner
      #   id: deploy-to-app-runner
      #   uses: awslabs/aws-app-runner-deploy@main
      #   with: 
      #     service: ${{ vars.APP_RUNNER_SERVICE_NAME }}
      #     image: ${{ steps.build-push-image.outputs.ECR_REGISTRY }}/${{ steps.build-push-image.outputs.ECR_REPOSITORY }}:${{ steps.build-push-image.outputs.IMAGE_TAG }}
      #     region: ${{ vars.AWS_REGION }}
      #     access-role-arn: ${{ secrets.AWS_APP_RUNNER_ACCESS_ROLE_ARN }}
      #     cpu: 1
      #     memory: 2
      #     port: 3333
      
      # - name: App Runner Check
      #   run: echo "App running... ${{ steps.deploy-to-app-runner.outputs.service-url }}"
      - name: Render task definition
        id: reder-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .aws/task-definition.json
          container-name: widget-server
          image: ${{ steps.build-push-image.outputs.ECR_REGISTRY }}/${{ steps.build-push-image.outputs.ECR_REPOSITORY }}:${{ steps.build-push-image.outputs.IMAGE_TAG }}

      - name: Deploy Amazon ECS
        id: deploy-amazon-ecs
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.reder-task-definition.outputs.task-definition }}
          service: widget-server
          cluster: rafaellodi-ftr-ecs
          wait-for-service-stability: true